service: mail
provider:
  name: aws
  runtime: nodejs12.x
  stage: "${opt:stage, 'stg'}"
  region: ap-southeast-1
  environment:
    SES_KEY_ID: "${self:custom.SES_KEY_ID.${self:provider.stage}}"
    SES_SECRET: "${self:custom.SES_SECRET.${self:provider.stage}}"
    SES_REGION: "${self:custom.SES_REGION.${self:provider.stage}}"
    RECAPTCHA_SECRET: "${self:custom.RECAPTCHA_SECRET.${self:provider.stage}}"
    NETWORK: "${self:custom.NETWORK.${self:provider.stage}}"
    EMAIL_API_KEYS: "${self:custom.EMAIL_API_KEYS.${self:provider.stage}}"
functions:
  email:
    description: "Sends email on behalf of user to third party with the OpenCerts' preset template."
    handler: index.handler
    events:
      - { http: { path: /, method: post, cors: true } }

custom:
  dotenv:
    basePath: ../../
  SES_KEY_ID:
    stg: "${env:stg_SES_KEY_ID}"
    prd: "${env:prd_SES_KEY_ID}"
  SES_SECRET:
    stg: "${env:stg_SES_SECRET}"
    prd: "${env:prd_SES_SECRET}"
  SES_REGION:
    stg: "${env:stg_SES_REGION}"
    prd: "${env:prd_SES_REGION}"
  RECAPTCHA_SECRET:
    stg: "${env:stg_RECAPTCHA_SECRET}"
    prd: "${env:prd_RECAPTCHA_SECRET}"
  NETWORK:
    stg: "${env:stg_NETWORK}"
    prd: "${env:prd_NETWORK}"
  EMAIL_API_KEYS:
    stg: "${env:stg_EMAIL_API_KEYS}"
    prd: "${env:prd_EMAIL_API_KEYS}"
  serverless-offline:
    lambdaPort: 3002
    httpPort: 3000
  customDomain:
    domainName: "${env:DOMAIN}" # Change this to your domain.
    basePath: "email" # This will be prefixed to all routes
    stage: ${self:provider.stage}
    certificateName: "${env:CERTIFICATE_DOMAIN}"
    createRoute53Record: true
    endpointType: "regional"
    securityPolicy: tls_1_2
  webpack:
    includeModules:
      packagePath: "../../package.json"
plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-domain-manager
  - serverless-webpack
